import React, { FC } from 'react'
import styles from './WindWidget.module.scss'
import 'react-loading-skeleton/dist/skeleton.css'
import Skeleton from 'react-loading-skeleton'
import Card from './Card/Card'

const data = [
  { name: 'speed', value: 7.61 },
  { name: 'deg', value: 170 },
  { name: 'gust', value: 7.83 },
]

const WindWidget: FC = () => {
  const loading = false

  return (
    <div className={styles.widget}>
      <p className={styles.title}>Wind</p>

      {loading && <Skeleton className={styles.skeletonRow} />}
      {!loading && (
        <div className={`${styles.row} ${styles.bad}`}>
          <svg width="37" height="34" viewBox="0 0 37 34" fill="#1FCB7A" xmlns="http://www.w3.org/2000/svg">
            {/* eslint-disable-next-line max-len */}
            <path d="M1.97872 11.3333C2.35346 11.3333 2.71979 11.2226 3.03138 11.015C3.34297 10.8074 3.58582 10.5124 3.72923 10.1673C3.87264 9.82214 3.91016 9.44235 3.83705 9.07594C3.76394 8.70953 3.58349 8.37296 3.3185 8.1088C3.05352 7.84463 2.71591 7.66473 2.34837 7.59185C1.98082 7.51897 1.59985 7.55637 1.25364 7.69934C0.907419 7.8423 0.611502 8.08441 0.403305 8.39503C0.195109 8.70566 0.0839844 9.07086 0.0839844 9.44444C0.0839844 9.94541 0.283608 10.4259 0.63894 10.7801C0.994272 11.1343 1.47621 11.3333 1.97872 11.3333ZM9.55767 11.3333H22.8208C24.3284 11.3333 25.7742 10.7363 26.8402 9.67361C27.9062 8.6109 28.505 7.16956 28.505 5.66667C28.505 4.16377 27.9062 2.72243 26.8402 1.65973C25.7742 0.597022 24.3284 0 22.8208 0C21.8241 0.00411108 20.8452 0.264337 19.9787 0.755556C19.7616 0.878957 19.5711 1.04396 19.4183 1.24106C19.2654 1.43816 19.1531 1.66346 19.088 1.90399C19.0228 2.14452 19.006 2.39553 19.0386 2.64256C19.0711 2.88958 19.1524 3.12775 19.2777 3.34333C19.403 3.5582 19.5697 3.74629 19.7681 3.89681C19.9665 4.04734 20.1928 4.15734 20.434 4.22051C20.6751 4.28368 20.9264 4.29879 21.1734 4.26495C21.4204 4.23111 21.6583 4.14901 21.8735 4.02333C22.1649 3.86698 22.4899 3.78276 22.8208 3.77778C23.3233 3.77778 23.8053 3.97679 24.1606 4.33102C24.5159 4.68526 24.7156 5.1657 24.7156 5.66667C24.7156 6.16763 24.5159 6.64808 24.1606 7.00231C23.8053 7.35655 23.3233 7.55556 22.8208 7.55556H9.55767C9.05515 7.55556 8.57322 7.75456 8.21789 8.1088C7.86256 8.46303 7.66293 8.94348 7.66293 9.44444C7.66293 9.94541 7.86256 10.4259 8.21789 10.7801C8.57322 11.1343 9.05515 11.3333 9.55767 11.3333ZM1.97872 18.8889H15.2419C15.7444 18.8889 16.2263 18.6899 16.5817 18.3356C16.937 17.9814 17.1366 17.501 17.1366 17C17.1366 16.499 16.937 16.0186 16.5817 15.6644C16.2263 15.3101 15.7444 15.1111 15.2419 15.1111H1.97872C1.47621 15.1111 0.994272 15.3101 0.63894 15.6644C0.283608 16.0186 0.0839844 16.499 0.0839844 17C0.0839844 17.501 0.283608 17.9814 0.63894 18.3356C0.994272 18.6899 1.47621 18.8889 1.97872 18.8889ZM34.1892 11.3333C34.564 11.3333 34.9303 11.2226 35.2419 11.015C35.5535 10.8074 35.7963 10.5124 35.9398 10.1673C36.0832 9.82214 36.1207 9.44235 36.0476 9.07594C35.9745 8.70953 35.794 8.37296 35.529 8.1088C35.264 7.84463 34.9264 7.66473 34.5589 7.59185C34.1914 7.51897 33.8104 7.55637 33.4642 7.69934C33.1179 7.8423 32.822 8.08441 32.6138 8.39503C32.4056 8.70566 32.2945 9.07086 32.2945 9.44444C32.2945 9.94541 32.4941 10.4259 32.8495 10.7801C33.2048 11.1343 33.6867 11.3333 34.1892 11.3333ZM30.3998 15.1111H22.8208C22.3183 15.1111 21.8364 15.3101 21.481 15.6644C21.1257 16.0186 20.9261 16.499 20.9261 17C20.9261 17.501 21.1257 17.9814 21.481 18.3356C21.8364 18.6899 22.3183 18.8889 22.8208 18.8889H30.3998C30.9023 18.8889 31.3842 19.0879 31.7396 19.4421C32.0949 19.7964 32.2945 20.2768 32.2945 20.7778C32.2945 21.2787 32.0949 21.7592 31.7396 22.1134C31.3842 22.4677 30.9023 22.6667 30.3998 22.6667C29.8973 22.6667 29.4153 22.8657 29.06 23.2199C28.7047 23.5741 28.505 24.0546 28.505 24.5556C28.505 25.0565 28.7047 25.537 29.06 25.8912C29.4153 26.2454 29.8973 26.4444 30.3998 26.4444C31.9073 26.4444 33.3531 25.8474 34.4191 24.7847C35.4851 23.722 36.084 22.2807 36.084 20.7778C36.084 19.2749 35.4851 17.8335 34.4191 16.7708C33.3531 15.7081 31.9073 15.1111 30.3998 15.1111ZM19.0314 22.6667H11.4524C10.9499 22.6667 10.468 22.8657 10.1126 23.2199C9.75729 23.5741 9.55767 24.0546 9.55767 24.5556C9.55767 25.0565 9.75729 25.537 10.1126 25.8912C10.468 26.2454 10.9499 26.4444 11.4524 26.4444H19.0314C19.5339 26.4444 20.0158 26.6434 20.3711 26.9977C20.7265 27.3519 20.9261 27.8324 20.9261 28.3333C20.9261 28.8343 20.7265 29.3147 20.3711 29.669C20.0158 30.0232 19.5339 30.2222 19.0314 30.2222C18.7004 30.2172 18.3755 30.133 18.084 29.9767C17.8683 29.84 17.6272 29.7482 17.375 29.7069C17.1229 29.6655 16.8649 29.6755 16.6167 29.7361C16.3685 29.7967 16.1352 29.9067 15.9307 30.0596C15.7263 30.2124 15.555 30.4049 15.4271 30.6254C15.2992 30.846 15.2174 31.0901 15.1866 31.343C15.1558 31.5959 15.1766 31.8523 15.2478 32.097C15.319 32.3417 15.4391 32.5695 15.6009 32.7666C15.7627 32.9638 15.9628 33.1264 16.1892 33.2444C17.0557 33.7357 18.0346 33.9959 19.0314 34C20.5389 34 21.9847 33.403 23.0507 32.3403C24.1167 31.2776 24.7156 29.8362 24.7156 28.3333C24.7156 26.8304 24.1167 25.3891 23.0507 24.3264C21.9847 23.2637 20.5389 22.6667 19.0314 22.6667ZM3.87346 22.6667H1.97872C1.47621 22.6667 0.994272 22.8657 0.63894 23.2199C0.283608 23.5741 0.0839844 24.0546 0.0839844 24.5556C0.0839844 25.0565 0.283608 25.537 0.63894 25.8912C0.994272 26.2454 1.47621 26.4444 1.97872 26.4444H3.87346C4.37597 26.4444 4.85791 26.2454 5.21324 25.8912C5.56857 25.537 5.7682 25.0565 5.7682 24.5556C5.7682 24.0546 5.56857 23.5741 5.21324 23.2199C4.85791 22.8657 4.37597 22.6667 3.87346 22.6667Z" />
          </svg>
          <div className={styles.column}>
            <p className={`${styles.status} ${styles.bad}`}>Good</p>
            <p className={styles.recommendation}>A perfect day for a walk!</p>
          </div>
        </div>
      )}

      <div className={styles.card}>
        {loading && [...Array(3)].map((_, index) => <Skeleton key={index} className={styles.skeletonCard} />)}
        {!loading && data.map((el, index) => <Card key={index} name={el.name} value={el.value} />)}
      </div>
    </div>
  )
}

export default WindWidget
